apiVersion: "v1"
kind: "Service"
metadata:
  labels:
    app.kubernetes.io/name: "hybrid-cloud-backend"
  name: "hybrid-cloud-backend"
spec:
  ports:
  - name: "http"
    port: 8080
    targetPort: 8080
  selector:
    app.kubernetes.io/name: "hybrid-cloud-backend"
  type: "ClusterIP"
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  labels:
    app.kubernetes.io/name: "hybrid-cloud-backend"
  name: "hybrid-cloud-backend"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "hybrid-cloud-backend"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "hybrid-cloud-backend"
    spec:
      containers:
      - env:
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        image: "docker.io/burrsutter/hybrid-cloud-backend:1.0.0"
        imagePullPolicy: "IfNotPresent"
        name: "hybrid-cloud-backend"
        resources:
          requests:
            memory: "100Mi"
            cpu: "250m" # 1/4 core
          limits:
            memory: "200Mi"
            cpu: "500m" # 1/2 core        
        ports:
        - containerPort: 8080
          name: "http"
          protocol: "TCP"
        livenessProbe:
          httpGet:
              port: 8080
              path: /alive
          periodSeconds: 5
          timeoutSeconds: 2
        readinessProbe:
          httpGet:  
            path: /health
            port: 8080
          periodSeconds: 3
